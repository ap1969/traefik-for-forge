# Ports
# 3000 - html-to-tailwind
# 3020 - uppy-companion (not used)
# 3030 - icon-api
# 3040 - json-storage
networks:
  web:
    external: true

services:
  traefik:
    image: traefik:v3.3.2
    container_name: traefik
    restart: always
    networks:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /certs:/certs:ro
      - ./traefik.auth:/auth/traefik.auth
      - /data/letsencrypt:/letsencrypt
    command:
      - --log.level=DEBUG
      - --api.dashboard=true
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # File provider for certificates
      - --providers.file.directory=/certs
      - --providers.file.watch=true
      # Add Let's Encrypt configuration
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.letsencrypt.acme.email=andrewpeacock1969@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true
      # Dashboard configuration
      - traefik.http.routers.dashboard.entrypoints=https
      - traefik.http.routers.dashboard.rule=Host(`rp.redboxapps.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.middlewares=auth-middleware@docker

      # Auth middleware
      - traefik.http.middlewares.auth-middleware.basicauth.usersfile=/auth/traefik.auth

      # Global redirect to HTTPS
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker
      - traefik.http.routers.http-catchall.priority=1

      # Handle cloudflare 
      # - traefik.http.middlewares.cloudflare.headers.customrequestheaders.X-Forwarded-Proto=https
      # - traefik.http.routers.json-storage.middlewares=cloudflare@docker

      # Redirect middleware
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

  html-to-tailwind:
    container_name: html-to-tailwind
    image: ghcr.io/ap1969/html-to-tailwind-api:latest
    restart: always
    networks:
      - web
    environment:
      - AUTH_TOKEN=${HTML_TO_TAILWIND_AUTH_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.html-to-tailwind.entrypoints=https
      - traefik.http.routers.html-to-tailwind.rule=Host(`tw.redboxapps.com`)
      - traefik.http.routers.html-to-tailwind.tls=true
      - traefik.http.services.html-to-tailwind.loadbalancer.server.port=3000

  json-storage:
    container_name: json-storage
    image: ghcr.io/ap1969/json-storage:1.0.1
    restart: always
    networks:
      - web
    environment:
      - API_TOKEN=${JSON_STORAGE_AUTH_TOKEN}
    volumes:
      - /data/storage:/usr/src/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.json-storage.entrypoints=https
      - traefik.http.routers.json-storage.rule=Host(`storage.redboxapps.com`)
      - traefik.http.routers.json-storage.tls=true
      - traefik.http.services.json-storage.loadbalancer.server.port=3000

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    networks:
      - web
    volumes:
      - /data/n8n:/home/node/.n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_USER_MANAGEMENT_DISABLED=true
      - NODE_ENV=production
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=false
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.entrypoints=http,https
      - traefik.http.routers.n8n.rule=Host(`automation.redboxapps.com`)
      - traefik.http.routers.n8n.tls.certresolver=letsencrypt
      - traefik.http.services.n8n.loadbalancer.server.port=5678

volumes:
  n8n_data:
    name: n8n_data

