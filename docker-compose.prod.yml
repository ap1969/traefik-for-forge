networks:
  web:
    external: true

services:
  traefik:
    image: traefik:v2.3
    restart: always
    networks:
      - web
    ports:
      - "80:80"
      - "443:443"
      # Uncomment for debug
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - ./traefik.auth:/auth/traefik.auth
    command:
      - --api.dashboard=true
      - --log.level=DEBUG
      # Uncomment for debug
      #- --api.insecure=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.email=${LETS_ENCRYPT_EMAIL}
    labels:
      ## TRAEFIK ROUTER & DASHBOARD
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`rp.embedbuilder.com`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.routers.traefik.tls.certresolver=leresolver
      - traefik.http.services.traefik.loadbalancer.server.port=8080

      ## Global redirect to HTTPS
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https

      ## Middlewares
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

      ## AUTH
      - traefik.http.middlewares.auth.basicauth.usersfile=/auth/traefik.auth

  html-to-tailwind:
    container_name: html-to-tailwind
    image: ghcr.io/ap1969/html-to-tailwind-api:latest
    restart: always
    networks:
      - web
    environment:
      - AUTH_TOKEN=${HTML_TO_TAILWIND_AUTH_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.html-to-tailwind.entrypoints=https
      - traefik.http.routers.html-to-tailwind.rule=Host(`tw.embedbuilder.com`)
      - traefik.http.routers.html-to-tailwind.tls.certresolver=leresolver
      - traefik.http.services.html-to-tailwind.loadbalancer.server.port=3000

  screenshot-service:
    container_name: screenshot-service
    image: ghcr.io/ap1969/screenshot-service:1.0.0
    restart: always
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.screenshot-service.entrypoints=https
      - traefik.http.routers.screenshot-service.rule=Host(`ss.embedbuilder.com`)
      - traefik.http.routers.screenshot-service.tls.certresolver=leresolver
      - traefik.http.services.screenshot-service.loadbalancer.server.port=3001

  uppy-companion:
    container_name: uppy-companion
    image: transloadit/companion
    restart: always
    networks:
      - web
    environment:
      - COMPANION_DATADIR=/mnt/companion-data
      - COMPANION_DOMAIN=comp.embedbuilder.com
      - COMPANION_PROTOCOL=https
      - COMPANION_CLIENT_ORIGINS=https://onlineadmin.dev,https://embedbuilder.com
      - COMPANION_SECRET=${COMPANION_SECRET}
      - COMPANION_DROPBOX_KEY=${COMPANION_DROPBOX_KEY}
      - COMPANION_DROPBOX_SECRET=${COMPANION_DROPBOX_SECRET}
      - COMPANION_GOOGLE_KEY=${COMPANION_GOOGLE_KEY}
      - COMPANION_GOOGLE_SECRET=${COMPANION_GOOGLE_SECRET}
    volumes:
      - ${COMPANION_DATA_DIR:-./companion-data}:/mnt/companion-data
    labels:
      - traefik.enable=true
      - traefik.http.routers.uppy-companion.entrypoints=https
      - traefik.http.routers.uppy-companion.rule=Host(`comp.embedbuilder.com`)
      - traefik.http.routers.uppy-companion.tls.certresolver=leresolver
      - traefik.http.services.uppy-companion.loadbalancer.server.port=3020

  